name: Deploy Server to EC2

on:
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Setup Java Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Package
        run: mvn clean package

      - name: Get IP Address
        run: | 
          EC2_IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=free-the-beans-key" \
          --query "Reservations[*].Instances[*].PublicDnsName" \
          --output text --region ${{secrets.AWS_REGION}})
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV

      - name: Fetch Private Key
        run: |
          aws ssm get-parameter --name "private_key_free_the_beans_ec2" --with-decryption --query 'Parameter.Value' --region ${{secrets.AWS_REGION}} --output text > pvt_key.pem

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: pvt_key.pem

      - name: Add SSH key and configure known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{env.EC2_IP}} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i pvt_key.pem -o StrictHostKeyChecking=no ec2-user@${{env.EC2_IP}} "sudo systemctl stop server.service"
          scp -i pvt_key.pem -o StrictHostKeyChecking=no target/*.jar ec2-user@${{env.EC2_IP}}:/home/ec2-user/server/

      - name: Start Server
        run: ssh -i pvt_key.pem -o StrictHostKeyChecking=no ec2-user@${{env.EC2_IP}} "sudo systemctl start server.service"
